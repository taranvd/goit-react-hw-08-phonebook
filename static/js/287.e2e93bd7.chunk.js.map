{"version":3,"file":"static/js/287.e2e93bd7.chunk.js","mappings":"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","sources":["components/ContactFilter/ContactFilter.style.js","components/ContactFilter/ContactFilter.js","components/ContactForm/ContactForm.style.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.style.js","components/ContactsList/ContactsList.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Label = styled.p`\n  font-size: 16px;\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n  width: calc(100% - 20px);\n  padding: 10px;\n  font-size: 14px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n","// import { ButtonStyled } from 'components/ContactsList/ContactsList.style';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { FilterContainer, Label, Input } from './ContactFilter.style';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const ContactFilter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <FilterContainer>\n      <Label>Find by contact</Label>\n      <Input\n        type=\"text\"\n        value={filter}\n        onChange={evt => dispatch(changeFilter(evt.target.value))}\n      />\n    </FilterContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin: 10px 0;\n  padding: 20px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  background-color: #fff;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\n`;\n\nexport const StyledField = styled(Field)`\n  display: flex;\n  flex-direction: column;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  padding: 10px;\n  width: calc(100% - 20px);\n`;\n\nexport const StyledButton = styled.button`\n  background-color: #007bff;\n  color: #fff;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n`;\n","export const getContacts = state => state.contacts.contacts;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  StyledField,\n  StyledButton,\n  Error,\n} from './ContactForm.style';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nconst scheme = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(10, 'Too Long!')\n    .required('Required!'),\n\n  //* Для ментора: Тут я не знаю як додати валідацію для 654-42-42 такого вводу, тому залишив так\n  number: Yup.number().required('Required!'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const addContactHandler = newContact => {\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (existingContact) {\n      alert(`${newContact.name} вже є у списку контактів!`);\n      return false;\n    }\n\n    dispatch(addContact(newContact));\n    return true;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={scheme}\n        onSubmit={async (values, actions) => {\n          const addedContactSuccessfuly = addContactHandler(values);\n          if (addedContactSuccessfuly) {\n            actions.resetForm();\n          }\n        }}\n      >\n        <StyledForm>\n          <label>\n            Name\n            <StyledField name=\"name\" placeholder=\"Name\" />\n            <Error name=\"name\" component=\"span\" />\n          </label>\n\n          <label>\n            Number\n            <StyledField type=\"number\" name=\"number\" placeholder=\"Number\" />\n            <Error name=\"number\" component=\"span\" />\n          </label>\n\n          <StyledButton type=\"submit\">Add contact</StyledButton>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 10px;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  background-color: #fff;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\n`;\n\nexport const ButtonStyled = styled.button`\n  background-color: #ff6347;\n  color: #fff;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #d84630;\n  }\n`;\n\nexport const ButtonClearAll = styled.button`\n  background-color: #ff6347;\n  color: #fff;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #d84630;\n  }\n`;\n","import { useEffect } from 'react';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport {\n  ButtonClearAll,\n  ButtonStyled,\n  List,\n  ListItem,\n} from './ContactsList.style';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts, removeContact } from 'redux/contacts/operations';\nimport { clearAll } from 'redux/contacts/contactsSlice';\n\nexport const ContactsList = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <ListItem key={contact.id}>\n          <span style={{ textAlign: 'center' }}>{contact.name} </span>\n          <span style={{ textAlign: 'center' }}>{contact.number}</span>\n          <ButtonStyled onClick={() => handleDeleteContact(contact.id)}>\n            Delete\n          </ButtonStyled>\n        </ListItem>\n      ))}\n      <ButtonClearAll onClick={() => dispatch(clearAll())}>\n        Clear all\n      </ButtonClearAll>\n    </List>\n  );\n};\n","import { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Helmet } from 'react-helmet';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n\n      <ContactForm />\n      <ContactFilter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["FilterContainer","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","ContactFilter","filter","useSelector","state","dispatch","useDispatch","_jsxs","children","_jsx","type","value","onChange","evt","changeFilter","target","StyledForm","Form","StyledField","Field","StyledButton","Error","ErrorMessage","_templateObject4","getContacts","contacts","getFilter","scheme","Yup","shape","name","min","max","required","number","ContactForm","addContactHandler","newContact","find","contact","toLowerCase","alert","concat","addContact","_Fragment","Formik","initialValues","validationSchema","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","actions","wrap","_context","prev","next","resetForm","stop","_x","_x2","apply","arguments","placeholder","component","List","ListItem","ButtonStyled","ButtonClearAll","ContactsList","visibleContacts","includes","useEffect","fetchContacts","map","style","textAlign","onClick","id","removeContact","clearAll","Helmet"],"sourceRoot":""}